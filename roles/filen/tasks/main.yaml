---
# Ignore errors in case filen-sync service is not already installed
- name: Stop filen daemon
  ansible.builtin.command: systemctl --user stop filen-sync
  ignore_errors: true
  become_user: "{{ ansible_user }}"

- name: Disable filen daemon
  ansible.builtin.command: systemctl --user disable filen-sync
  ignore_errors: true
  become_user: "{{ ansible_user }}"

- name: Clean filen installation
  ansible.builtin.file:
    path: "{{ host_homedir }}/.filen-cli"
    state: "absent"

- name: Recreate filen installation dir
  ansible.builtin.file:
    path: "{{ host_homedir }}/.filen-cli"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Create temporary stow directory
  ansible.builtin.file:
    path: "{{ tmp_template_root }}/bin"
    state: directory

- name: "Install filen-cli (version {{ filen_cli_ver }})"
  get_url:
    url: "https://github.com/FilenCloudDienste/filen-cli/releases/download/v{{ filen_cli_ver }}/filen-cli-v{{ filen_cli_ver }}-linux-x64"
    dest: "{{ tmp_template_root }}/bin/filen-cli"
    mode: '0755'

- name: Move filen-cli executable to global path
  include_role:
    name: copy_and_stow
  vars:
    prg_name: filen
    src_dir: "/tmp" 
    dest_dir: "{{ install_root }}"
    become_usr: root

- name: Clean temporary stow directory
  ansible.builtin.file:
    path: "{{ tmp_template_root }}"
    state: absent

- name: Copy filen syncPairs definition
  ansible.builtin.copy:
    src: ".filen-cli/syncPairs.json"
    dest: "{{ host_homedir }}/.filen-cli"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Create temporary structure
  ansible.builtin.file:
    path: "{{ tmp_template_dir }}"
    state: directory

- name: Create filen sync systemd user unit file from template
  ansible.builtin.template:
    src: "templates/dotfiles/filen/.config/systemd/user/{{ item }}.j2"
    dest: "{{ tmp_template_dir }}/{{ item }}"
    mode: '0644'
  loop:
    - filen-sync.service

- name: Install filen sync systemd user unit file
  include_role:
    name: copy_and_stow
  vars:
    prg_name: "{{ item }}"
    src_dir: "/tmp"
    dest_dir: "{{ dst_dotdir }}"
    become_usr: "{{ ansible_user }}"
  with_items:
    - filen

- name: Remove temporary unit
  ansible.builtin.file:
    path: "{{ tmp_template_root }}"
    state: absent

- name: Reload systemd user rules
  ansible.builtin.command: systemctl --user daemon-reload
  become_user: "{{ ansible_user }}"

- name: Start filen daemon
  ansible.builtin.command: systemctl --user start filen-sync
  become_user: "{{ ansible_user }}"

- name: Enable filen daemon
  ansible.builtin.command: systemctl --user enable filen-sync
  become_user: "{{ ansible_user }}"
