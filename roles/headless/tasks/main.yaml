---
- name: Clean dotfile directory
  ansible.builtin.file:
    path: "{{ dst_dotdir }}"
    state: "absent"

- name: Recreate dotfile directory and config directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ host_homedir }}/.config"
    - "{{ dst_dotdir }}"
  become_user: "{{ ansible_user }}"

- name: Copy and stow headless dotfiles
  include_role:
    name: copy_and_stow
  vars:
    prg_name: "{{ item }}"
    src_dir: "{{ src_dotdir }}"
    dest_dir: "{{ dst_dotdir }}"
    become_usr: "{{ ansible_user }}"
  with_items:
    - bash
    - clang
    - pylint
    - screen

- name: Prepare git directory
  file:
    path: "{{ dst_dotdir }}/git"
    state: directory
  become_user: "{{ ansible_user }}"

- name: Copy gitconfig
  ansible.builtin.template:
    src: "{{ src_dotdir }}/git/dot-gitconfig.j2"
    dest: "{{ dst_dotdir }}/git/dot-gitconfig"
  become_user: "{{ ansible_user }}"

- name: Stow gitconfig
  ansible.builtin.command: stow --dotfiles -Rv {{ item }}
  args:
    chdir: "{{ dst_dotdir }}"
  with_items:
    - git
  become_user: "{{ ansible_user }}"

- name: Unstow bash
  ansible.builtin.command: stow --dotfiles -Dv {{ item }}
  args:
    chdir: "{{ dst_dotdir }}"
  with_items:
    - bash
  become_user: "{{ ansible_user }}"

- name: Select Debian dircolors
  ansible.builtin.command: mv "{{ dst_dotdir }}/bash/dot-dircolors_debian" "{{ dst_dotdir }}/bash/dot-dircolors"
  when: ansible_facts['os_family'] == "Debian"
  become_user: "{{ ansible_user }}"

- name: Select Redhat dircolors
  ansible.builtin.command: mv "{{ dst_dotdir }}/bash/dot-dircolors_centos" "{{ dst_dotdir }}/bash/dot-dircolors"
  when: ansible_facts['os_family'] == "Redhat"
  become_user: "{{ ansible_user }}"

- name: Remove Debian dircolors
  ansible.builtin.file:
    path: "{{ dst_dotdir }}/bash/dot-dircolors_debian"
    state: "absent"
  when: ansible_facts['os_family'] == "Redhat"

- name: Remove Redhat dircolors
  ansible.builtin.file:
    path: "{{ dst_dotdir }}/bash/dot-dircolors_centos"
    state: "absent"
  when: ansible_facts['os_family'] == "Debian"

- name: Stow bash dotfiles
  ansible.builtin.command: stow --dotfiles -Rv {{ item }}
  args:
    chdir: "{{ dst_dotdir }}"
  loop:
    - bash
  become_user: "{{ ansible_user }}"

- name: Install editors
  include_role:
    name: vim
